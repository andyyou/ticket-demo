### 1. 規劃基礎架構

這是一個售票網站應用程式，包含客戶端提供給使用者購買票券以及管理者使用的後台管理介面。該應用程式使用 Laravel 12 作為基礎框架。資料庫使用 MySQL 8+。前端視圖使用 Blade、Livewire、 [Alpine.js](https://alpinejs.dev/)、[Flux UI](https://fluxui.dev/) 。使用 git 作為版本控制。程式風格檢查使用 Laravel Pint。測試工具使用內建 Laravel Pest。預計使用 Laravel Cloud 作為部署平台。快取使用 Redis。網頁伺服器使用 Nginx + PHP-FPM（可選加入 Laravel Octane）。單體式應用 (Monolithic) 為主，保持簡單。

### 2. 設定 Rule 和 Context

Act as a senior Laravel developer, follow Laravel conventions, and PSR-1, PSR-2, etc (validate code with PHP CS Fixer). Include "step-by-step" reasoning for complex tasks. The core priciple for coding is keeping readable, maintable, and concise. Always prefer basic, clean solution, and simple architecture to solve the problem. If any part of this prompt is ambiguous, ask me for clarification before proceeding.

### 3. Product Requirement Document (What to build?)

#### 專案概述 (Overview)

- **產品名稱:** 藝文售票平台 (可自訂)
- **產品目標:** 打造一個功能完整、易於使用且可靠的線上售票網站，服務於藝文活動（如音樂會、戲劇、展覽等）的舉辦方與購票客戶。

功能快速概覽：

**客戶端 (Client-Side)**

- **活動探索與列表:**
  - 活動列表頁面 (含關鍵字/日期搜尋、分類篩選、排序)
  - 活動詳細資訊頁面 (含活動介紹、地點、票種規格、數量選擇、**立即購買按鈕**)
- **購票與支付:**
  - 直接購買與結帳流程 (確認票券、填寫購票人基本資料 [含活動客製化欄位]、選擇藍新金流支付方式、跳轉支付、訂單完成頁)
- **使用者帳戶:**
  - 註冊 (Email、密碼)
  - 登入 (帳號密碼、OAuth 第三方登入 - Google/Facebook via Laravel Socialite)
  - 忘記密碼 (Email 驗證重設)
  - 電子郵件驗證 (點擊連結啟用帳戶)
  - 個人資料管理 (查看/編輯基本資料、修改密碼)
- **訂單與票券管理:**
  - 訂單查詢與管理 (列表、詳細資訊、訂單狀態)
  - 訂單取消/退款申請 (依據退款政策，提交申請)
  - 我的票券列表 (顯示已付款、未舉行活動的票券)
  - 票券詳細資訊 (含入場 QR Code/條碼)
- **其他:**
  - 全站 Q&A / FAQ (常見問題查閱)

**管理介面 (Admin Panel)**

- **系統總覽與設定:**
  - 管理介面總覽 (核心數據儀表板：銷售額、訂單數、待處理事項)
  - 組織設定 (基本資訊、Logo、聯絡方式、預設退款政策)
  - 組織成員管理 (新增/編輯成員、角色權限分配)
- **活動與票務管理:**
  - 活動管理 (列表、篩選、新增/編輯[含基本資訊、詳情、主圖、SEO]、刪除、上架/下架、複製活動)
  - 票種管理 (列表、新增/編輯[名稱、價格、總量、限購數、售票起訖]、刪除)
  - 購票客製化表單管理 (新增/編輯/刪除表單及欄位，用於活動購票時收集額外資訊)
- **訂單與客戶管理:**
  - 客戶管理 (列表、查詢、查看客戶基本資料與訂單歷史)
  - 訂單管理 (列表、篩選[依活動/日期]、查詢[訂單號/購票人]、查看詳細[含客製化表單內容]、手動執行退款/取消訂單)
- **現場執行與通知:**
  - 活動簽到管理 (依活動顯示購票名單、手動/掃碼簽到、查看簽到紀錄)
  - 自動化通知訊息管理 (設定購買成功、退款、活動提醒等 Email 範本)
- **(可選) 活動數據主控台 (單一活動銷售、票券、簽到概覽)** - *這項是從您原先的"活動主控台"轉化而來，聚焦單一活動的即時數據*

#### 2. 目標用戶 (Target Users)

- **2.1. 購票客戶 (Attendees/Customers):**
  - 想要搜尋並購買藝文活動票券的個人。
  - 期望簡單直觀的介面、快速的結帳流程及安全的交易。
- **2.2. 活動舉辦方 (Organizers/Administrators):**
  - 需要發布活動資訊、設定不同票種、管理訂單、追蹤銷售狀況的組織或個人。
  - 可能包含多個成員，需要權限管理。
- **2.3. 平台管理員 (Super Administrators):**
  - 負責整個平台的維運、系統設定、監控。

#### 3. 功能範圍 (Scope of Features)

**3.1. 客戶端 (Client-Facing Application)**

- **3.1.1. 使用者帳戶模組 (User Account Module)**
  - **3.1.1.1. 註冊 (Registration):**
    - 使用電子郵件和密碼註冊。
    - 欄位：姓名、電子郵件、密碼、確認密碼。
    - 包含隱私政策和服務條款同意選項。
  - **3.1.1.2. 電子郵件驗證 (Email Verification):**
    - 註冊後發送驗證郵件，點擊連結啟用帳戶。
    - 未驗證帳戶功能受限（例如：無法購票）。
  - **3.1.1.3. 登入 (Login):**
    - 使用電子郵件和密碼登入。
    - OAuth 第三方登入選項：Google, Facebook (使用 Laravel Socialite)。
  - **3.1.1.4. 忘記密碼 (Forgot Password):**
    - 輸入註冊電子郵件，系統發送密碼重設連結。
    - 引導用戶設定新密碼。
  - **3.1.1.5. 個人設定 (Profile Management):**
    - 查看及修改個人資料（如：姓名、聯絡電話）。
    - 修改登入密碼。
    - 管理綁定的第三方帳號。
- **3.1.2. 活動瀏覽與搜尋模組 (Event Discovery Module)**
  - **3.1.2.1. 首頁 (Homepage):**
    - 精選活動推薦區塊。
    - 最新活動列表。
    - 熱門活動列表。
    - 依活動分類瀏覽入口。
  - **3.1.2.2. 活動列表頁面 (Event Listing Page):**
    - **搜尋功能:**
      - 依關鍵字搜尋 (活動標題、演出者、場地)。
      - 依日期區間篩選。
    - **排序功能:**
      - 依活動開始日期 (預設)。
      - 依活動發布日期。
      - 依熱門程度。
    - **活動列表區塊:**
      - 以卡片或列表形式呈現活動。
      - 每項活動顯示：活動主圖、標題、日期、地點簡述、價格範圍。
      - 分頁功能。
  - **3.1.2.3. 活動詳細資訊頁面 (Event Detail Page):**
    - 活動主圖/影片。
    - 活動標題、副標題。
    - 活動日期與時間。
    - 活動地點 (含地圖顯示，如 Google Maps 嵌入)。
    - 活動完整介紹 (富文本編輯器內容)。
    - 主辦單位資訊。
    - **票種購買選項:**
      - 列出所有可購買票種 (票種名稱、價格、剩餘數量提示 - 可模糊顯示如 "熱賣中"、"少量" 或明確數字)。
      - 選擇票種及數量。
      - "立即購買"按鈕。
    - 活動注意事項。
- **3.1.3. 票券購買與結帳模組 (Direct Ticket Purchase & Checkout Module)**
  - **3.1.3.1. 購買與結帳頁面 (Purchase & Checkout Page):**
    - **觸發條件:** 用戶在「活動詳細資訊頁面 (3.1.2.3)」為特定票種選擇數量後，點擊「立即購買」按鈕進入此頁面。
    - **主要區塊與功能:**
      - **A. 票券資訊確認區塊 (Ticket Information Confirmation Section):**
        - 展示用戶所選購的活動名稱。
        - 展示所選票種的名稱。
        - 展示票種單價。
        - 展示用戶選擇的購買數量。
        - 計算並顯示該票種的應付小計金額。
        - 顯示訂單總金額 (在此單一票種購買流程中，小計即總金額)。
      - **B. 購票人資訊表單區塊 (Attendee Information Form Section):**
        - **自動帶入 (若已登入):** 如果用戶已登入，系統應嘗試預先填入其已存檔的姓名、聯絡電話、電子郵件。
        - **必填欄位:**
          - 購票人姓名。
          - 聯絡電話。
          - 電子郵件 (用於接收訂單確認與電子票券)。
        - **客製化表單欄位 (Custom Fields - Activity Specific):**
          - 根據該活動在後台設定的「購買須填寫表單」，動態顯示額外的必填或選填欄位 (例如：飲食偏好、特殊需求、T恤尺寸等)。
      - **C. 付款方式選擇區塊 (Payment Method Selection Section):**
        - **預設支付方式:** 藍新金流 (NewebPay) 線上支付。
        - **詳細支付選項:** 列出藍新金流支援的具體支付方式圖示或選項 (例如：信用卡/簽帳金融卡、網路ATM、ATM櫃員機轉帳、超商代碼繳費等)。用戶可根據藍新金流的介面進行選擇。
      - **D. 條款同意區塊 (Terms & Conditions Agreement Section):**
        - 提供連結至網站的「服務條款」與「退款政策」。
        - 用戶需勾選「我已閱讀並同意服務條款與退款政策」方可繼續。
      - **E. 訂單提交與付款按鈕 (Order Submission & Payment Button):**
        - 按鈕文字例如：「確認訂單並前往付款」或「立即付款」。
        - **系統行為:**
          1. 點擊後，前端進行表單驗證。
          2. 驗證通過後，系統在後端創建一筆訂單記錄，初始狀態為「待付款 (Pending Payment)」。
          3. 將用戶重新導向至藍新金流的安全支付頁面，並傳遞必要的訂單資訊（訂單編號、金額等）。
        - **付款失敗處理:** 若在藍新金流支付失敗或用戶取消支付，應能引導用戶返回網站的適當頁面（例如：重新嘗試付款或訂單列表），並給予清晰的提示訊息。
  - **3.1.3.2. 訂單完成頁面 (Order Confirmation Page):**
    - **觸發條件:** 用戶在藍新金流完成付款並成功後，由藍新金流自動跳轉回此頁面。
    - **主要顯示內容:**
      - 明確的成功訊息，例如：「訂購完成！感謝您的購買」。
      - 購買的活動名稱、訂單編號、票種、數量、總金額等訂單摘要。
      - 提示訊息：「訂單確認信與電子票券已發送至您的註冊信箱 [用戶Email]」。
      - **後續操作連結:**
        - 「前往我的訂單」按鈕/連結。
        - 「繼續瀏覽其他活動」按鈕/連結。
- **3.1.4. 用戶票務與訂單管理模組 (User Order & Ticket Management Module)**
  - **3.1.4.1. 訂單查詢與管理 (Order History):**
    - 列表顯示所有歷史訂單。
    - 每筆訂單顯示：訂單編號、訂購日期、活動名稱、總金額、訂單狀態 (例如：待付款、已付款、已取消、已完成、退款處理中、已退款)。
    - 點擊可查看訂單詳細資訊。
  - **3.1.4.2. 訂單詳細資訊 (Order Details):**
    - 完整的訂單內容，包含購買的票種、數量、價格、付款資訊、購票人填寫的表單資料。
  - **3.1.4.3. 取消訂單/退款申請 (Order Cancellation/Refund Request):**
    - 用戶可在符合退款政策的條件下申請取消訂單並退款。
    - 顯示退款政策說明。
    - 提交申請後，訂單狀態變更為「退款處理中」。
    - 退款進度通知。
  - **3.1.4.4. 我的票券列表 (My Tickets - Upcoming):**
    - 列表顯示所有「已付款」且「尚未舉行」的活動票券。
    - 每張票券顯示：活動名稱、日期、時間、地點。
  - **3.1.4.5. 票券詳細資訊 (Ticket Details):**
    - 顯示單張票券的完整資訊。
    - 包含入場用 QR Code (或條碼)。
    - 入場須知。
    - (可選) 票券轉贈功能 (需考慮實名制與否)。
- **3.1.5. 系統輔助模組 (System Support Module)**
  - **3.1.5.1. 全站 Q&A / FAQ:**
    - 常見問題分類與解答 (例如：購票問題、付款問題、退票問題、帳戶問題)。
    - 搜尋 FAQ 功能。
  - **3.1.5.2. 聯絡我們 (Contact Us):**
    - 提供客服聯繫方式 (表單、Email、電話)。
  - **3.1.5.3. 網站公告 (Announcements):**
    - 顯示系統維護、重要通知等。

**3.2. 管理介面 (Admin Panel)**

- **3.2.1. 總覽與統計模組 (Dashboard & Analytics Module)**
  - **3.2.1.1. 管理介面總覽 (Dashboard):**
    - 關鍵數據統計：今日銷售額、本月銷售額、待處理訂單數、近期活動。
  - **3.2.1.2. 銷售報告 (Sales Reports):**
    - 依日期、活動、票種等維度篩選查看銷售數據。
    - 匯出報告功能 (CSV/Excel)。
- **3.2.2. 組織與權限管理模組 (Organization & Access Control Module)**
  - **3.2.2.1. 組織設定 (Organization Settings):**
    - 設定組織名稱、Logo、聯絡資訊、預設退款政策等。
  - **3.2.2.2. 組織成員管理 (Team Members Management):**
    - 新增、編輯、刪除組織成員帳號。（第一版本不支援角色權限）
- **3.2.3. 活動管理模組 (Event Management Module)**
  - **3.2.3.1. 活動列表 (Event List):**
    - 顯示所有活動，包含草稿、已上架、已下架、已結束等狀態。
    - 搜尋、篩選功能。
  - **3.2.3.2. 新增/編輯活動 (Create/Edit Event):**
    - **基本資訊:** 活動標題、副標題、分類、主辦單位、活動日期與時間、地點 (可整合地圖標記)、活動主圖/影片上傳。
    - **詳細描述:** 使用富文本編輯器撰寫活動內容。
    - **票種設定:** 關聯已建立的票種，或在此快速新增票種。
    - **購票表單設定:** 選擇此活動購票時需填寫的客製化表單。
    - **SEO 設定:** Meta Title, Meta Description, Keywords.
    - **活動狀態:** 草稿、預覽、上架 (開放售票)、下架 (暫停售票)。
  - **3.2.3.3. 刪除活動 (Delete Event):**
    - 邏輯刪除或封存，而非物理刪除 (尤其是有訂單的活動)。
  - **3.2.3.4. 上架/下架活動 (Publish/Unpublish Event):**
    - 快速切換活動的售票狀態。
  - **3.2.3.5. 複製活動 (Duplicate Event):**
    - 方便快速建立相似活動。
- **3.2.4. 票種管理模組 (Ticket Type Management Module)**
  - **3.2.4.1. 票種列表 (Ticket Type List):**
    - 顯示所有已建立的票種。
  - **3.2.4.2. 新增/編輯票種 (Create/Edit Ticket Type):**
    - 票種名稱 (例如：早鳥票、全票、學生票)。
    - 價格。
    - 總數量 (庫存)。
    - 每筆訂單限購數量。
    - 售票開始與結束時間。
    - 票種描述/說明。
    - 狀態 (啟用/停用)。
  - **3.2.4.3. 刪除票種 (Delete Ticket Type):**
    - 若票種已被訂單關聯，則不允許刪除，可設為停用。
- **3.2.5. 客製化表單管理模組 (Custom Form Management Module)**
  - **3.2.5.1. 購買須填寫表單列表 (Form List):**
    - 管理用於不同活動購票時需額外收集資訊的表單。
  - **3.2.5.2. 新增/編輯表單 (Create/Edit Form):**
    - 表單名稱。
    - 新增表單欄位：欄位標籤、欄位類型 (文字、數字、下拉選單、日期、單選、多選等)、是否必填。
    - 拖放排序欄位。
  - **3.2.5.3. 刪除表單 (Delete Form):**
    - 若表單已被活動關聯，則不允許刪除。
- **3.2.6. 訂單管理模組 (Order Management Module - Admin)**
  - **3.2.6.1. 活動訂單列表 (Event Order List):**
    - 篩選特定活動的訂單，或所有訂單。
    - 搜尋功能 (訂單編號、購票人姓名/Email)。
    - 顯示訂單編號、購票人、活動名稱、訂購時間、金額、付款狀態、訂單狀態。
    - 匯出訂單資料 (CSV/Excel)。
  - **3.2.6.2. 訂單詳細資訊 (View Order Details):**
    - 查看完整訂單資訊，包含購票人填寫的客製化表單內容。
  - **3.2.6.3. 手動處理退款/取消 (Manual Refund/Cancellation):**
    - 管理員處理用戶的退款申請，或主動取消訂單。
    - 記錄退款原因、退款金額。
    - 更新訂單狀態。
  - **3.2.6.4. 手動新增訂單 (Manual Order Creation):**
    - 為特殊情況（如公關票、線下付款）手動建立訂單。
- **3.2.7. 入場簽到管理模組 (Check-in Management Module)**
  - **3.2.7.1. 活動簽到列表 (Check-in List per Event):**
    - 顯示特定活動的已購票名單，用於現場簽到。
    - 搜尋票券持有者 (姓名、票號)。
  - **3.2.7.2. 簽到方式:**
    - **手動簽到:** 勾選或點擊按鈕標記已簽到。
    - **(可選) QR Code/條碼掃描簽到:** 使用行動裝置鏡頭或掃描槍掃描票券上的 QR Code/條碼進行快速簽到。
  - **3.2.7.3. 簽到紀錄 (Check-in Log):**
    - 查看簽到時間、簽到狀態。
    - 新增/編輯/刪除簽到紀錄 (主要用於修正錯誤)。
  - **3.2.7.4. 即時簽到統計:**
    - 顯示已簽到人數 / 總購票人數。
- **3.2.8. 通知與訊息管理模組 (Notification & Message Management Module)**
  - **3.2.8.1. 活動購買成功通知訊息設定 (Purchase Success Notification Template):**
    - 自訂客戶購買成功後收到的電子郵件範本內容 (可使用變數如姓名、活動名稱、訂單連結等)。
  - **3.2.8.2. 其他自動化郵件範本管理:**
    - 例如：註冊驗證信、密碼重設信、訂單取消通知、退款成功通知、活動前提醒通知。
  - **3.2.8.3. 對特定購票者發送訊息 (Send Message to Attendees):**
    - 針對特定活動的全部或部分購票者發送重要通知 (例如：活動延期、場地變更)。
- **3.2.9. 會員管理模組 (Customer Management Module)**
  - **3.2.9.1. 會員列表 (Customer List):**
    - 顯示所有註冊客戶的列表。
    - 搜尋客戶 (姓名、Email、電話)。
  - **3.2.9.2. 會員詳細資訊 (Customer Details):**
    - 查看客戶基本資料、歷史訂單紀錄。
  - **3.2.9.3. 管理會員狀態 (Manage Customer Status):**
    - 例如：停用/啟用帳戶。
- **3.2.10. 系統設定模組 (System Settings Module - Super Admin)**
  - **3.2.10.1. 支付設定:** 設定藍新金流 API 金鑰等。
  - **3.2.10.2. 郵件伺服器設定 (SMTP Settings):** 設定發送郵件的伺服器。
  - **3.2.10.3. 網站基本資訊設定:** 網站名稱、Logo、預設貨幣、時區等。
  - **3.2.10.4. 內容管理:** 管理 FAQ 內容、服務條款、隱私政策等靜態頁面。

### 4. 執行計畫 (Implementation Plan)

#### 4.1 專案初始設置 (Project Setup)

- **4.1.1 安裝與配置基礎環境:**
  - 設置 PHP 8.2+ 環境
  - 安裝 MySQL 8.0+
  - 安裝 Redis
  - 設置 Nginx + PHP-FPM

- **4.1.2 安裝與初始化 Laravel 專案:**
  - 使用 Laravel 12 建立專案
  - 設置 .env 環境變數
  - 配置資料庫連接
  - 設置 Redis 快取
  - 安裝必要的 Composer 套件
  - 初始化 Git 儲存庫

- **4.1.3 前端依賴配置:**
  - 安裝 Livewire
  - 設置 Alpine.js
  - 安裝 Flux UI 框架
  - 設置資產編譯流程 (Vite)

- **4.1.4 開發工具與標準:**
  - 配置 Laravel Pint 程式碼風格檢查
  - 設置 Laravel Pest 測試環境
  - 建立 CI/CD 流程
  - 設置開發與部署環境

#### 4.2 資料庫設計 (Database Design)

- **4.2.1 核心資料表結構:**
  - **users**: 用戶表，包含身份驗證及個人資料
  - **events**: 活動表，儲存活動基本資訊
  - **event_categories**: 活動分類表
  - **tickets**: 票種表，定義不同票種規格
  - **orders**: 訂單表，追蹤用戶購買記錄
  - **order_items**: 訂單明細表，單筆訂單內的票券項目
  - **custom_forms**: 客製化表單定義表
  - **custom_form_fields**: 表單欄位定義表
  - **form_responses**: 用戶填寫的表單回應表
  - **check_ins**: 活動簽到記錄表
  - **organizations**: 組織資料表
  - **team_members**: 組織團隊成員表
  - **faqs**: FAQ 表
  - **notification_templates**: 通知訊息範本表

- **4.2.2 資料關聯與索引設計:**
  - 設計資料表關聯 (外鍵關係)
  - 定義資料索引提升查詢效能
  - 設計資料軟刪除機制

- **4.2.3 資料遷移與種子資料:**
  - 建立資料庫遷移檔案
  - 準備基本種子資料
  - 建立資料庫回滾機制

#### 4.3 開發階段 (Development Phases)

- **4.3.1 第一階段 - 核心功能 (Phase 1 - Core Features):**
  - **用戶認證系統**:
    - 實作基本註冊/登入功能
    - 電子郵件驗證流程
    - 密碼重設機制
  - **管理後台基礎架構**:
    - 建立管理介面佈局
    - 實作權限控制系統
  - **活動與票種管理**:
    - 活動 CRUD 操作
    - 票種 CRUD 操作
    - 活動上架/下架功能

- **4.3.2 第二階段 - 電子商務功能 (Phase 2 - E-commerce Features):**
  - **藍新金流整合**:
    - 金流 API 串接
    - 付款回調處理
    - 訂單狀態管理
  - **購票流程**:
    - 實作購票選擇介面
    - 結帳流程
    - 訂單確認頁面
  - **票券管理**:
    - 電子票券生成
    - QR Code/條碼產生
    - 電子郵件票券發送

- **4.3.3 第三階段 - 進階功能 (Phase 3 - Advanced Features):**
  - **客製化表單系統**:
    - 表單建立介面
    - 動態欄位處理
    - 表單關聯至活動
  - **活動簽到系統**:
    - 簽到名單管理
    - QR Code 掃描功能
    - 簽到統計報表
  - **報表與統計**:
    - 銷售報表
    - 活動數據分析
    - 資料匯出功能

- **4.3.4 第四階段 - 優化與擴展 (Phase 4 - Optimization & Extensions):**
  - **性能優化**:
    - 資料庫查詢優化
    - 快取機制實作
    - 頁面載入加速
  - **使用者體驗改進**:
    - 前端優化
    - 響應式設計調整
    - 使用者流程優化
  - **第三方登入整合**:
    - Google 登入
    - Facebook 登入
  - **多語言支援**:
    - 國際化架構設置
    - 繁體中文與英文支援

#### 4.4 測試策略 (Testing Strategy)

- **4.4.1 單元測試:**
  - 使用 Laravel Pest 為核心功能撰寫測試
  - 模型與服務層方法測試

- **4.4.2 功能測試:**
  - 使用者流程測試
  - API 端點測試
  - 表單驗證測試

- **4.4.3 整合測試:**
  - 第三方服務整合測試
  - 付款流程測試

- **4.4.4 性能測試:**
  - 負載測試
  - 資料庫查詢效能測試

#### 4.5 部署計畫 (Deployment Plan)

- **4.5.1 環境準備:**
  - 準備測試/預上線/正式環境
  - 設置 Laravel Cloud 部署配置
  - 準備資料庫遷移腳本

- **4.5.2 版本控制與發布:**
  - 建立 Git 分支策略
  - 設置自動化部署流程
  - 版本標記與更新日誌維護

- **4.5.3 監控與維護:**
  - 設置錯誤監控系統
  - 日誌收集與分析
  - 備份與恢復機制

#### 4.6 專案時程規劃 (Project Timeline)

- **第一階段 (核心功能)**: 4 週
- **第二階段 (電子商務功能)**: 3 週
- **第三階段 (進階功能)**: 3 週
- **第四階段 (優化與擴展)**: 2 週
- **測試與部署準備**: 2 週

總計預估開發時間: 14 週 (約 3.5 個月)

### 5. 資料庫設計與實現紀錄

#### 5.1 模型設計調整

在資料庫設計階段，我們基於需求文件進行了以下關鍵調整：

1. **UUID 主鍵**: 
   - 使用 UUID 作為所有模型的主鍵，而非自增 ID
   - 實現 `HasUuid` trait 在所有模型中重用
   - 確保 UUID 在創建模型前自動生成

2. **欄位命名和類型調整**:
   - 使用更具描述性的欄位命名 (如 `featured_image_url`)
   - 在資料庫層使用 varchar 儲存狀態，但在模型層使用常量定義枚舉值
   - 使用適當的資料類型與長度限制（如 decimal(10,2) 用於金額）

3. **座位組機制**:
   - 設計 `SeatGroup` 模型允許預設座位配置可以重複使用
   - 與 `Ticket` 和 `Seat` 建立關聯，減少重複設定座位的工作

4. **防止高併發超賣**:
   - 對座位票使用唯一索引 (`UNIQUE INDEX (ticket_id, seat_id)`) 確保一個座位只能售出一次
   - 對一般票券實現購買令牌機制 (`purchase_token`)
   - 使用資料庫事務確保原子性操作

5. **金流相關欄位**:
   - 在 `orders` 表添加多種支付提供者欄位
   - 設計 `payment_details` JSON 欄位存儲不同支付提供商的特定資訊

#### 5.2 已實現的模型和遷移檔案

以下是已完成實現的模型和對應的遷移檔案：

1. **User 和身份驗證相關**:
   - `User` 模型（整合 Laravel Sanctum、SoftDeletes）
   - `0001_01_01_000000_create_users_table.php`

2. **活動與票務核心功能**:
   - `Event` 模型: 活動基本資訊和狀態管理
   - `Ticket` 模型: 票種定義與庫存管理
   - `Seat` 模型: 座位設置與狀態追蹤
   - `SeatGroup` 模型: 可重複使用的座位組設定
   - 對應遷移檔案: 
     - `2025_05_12_122951_create_events_table.php`
     - `2025_05_12_123703_create_tickets_table.php`
     - `2025_05_12_123933_create_seats_table.php`
     - `2025_05_12_122926_create_seat_groups_table.php`

3. **訂單和購票功能**:
   - `Order` 模型: 訂單管理和支付處理
   - `OrderItem` 模型: 訂單明細和票券狀態
   - 對應遷移檔案:
     - `2025_05_12_124651_create_orders_table.php`
     - `2025_05_12_125010_create_order_items_table.php`

4. **表單和簽到功能**:
   - `CustomForm` 模型: 客製化表單定義
   - `CustomFormField` 模型: 表單欄位設置
   - `FormResponse` 模型: 用戶表單回應
   - `CheckIn` 模型: 活動簽到記錄
   - 對應遷移檔案:
     - `2025_05_12_122834_create_custom_forms_table.php`
     - `2025_05_12_122839_create_custom_form_fields_table.php`
     - `2025_05_12_125142_create_form_responses_table.php`
     - `2025_05_12_125250_create_check_ins_table.php`

#### 5.3 關聯和業務邏輯實現

在模型中，我們實現了以下關鍵功能：

1. **關聯定義**:
   - 使用 Laravel Eloquent 關聯 (hasMany, belongsTo, hasOne 等)
   - 建立適當的外鍵約束和級聯刪除規則

2. **業務邏輯方法**:
   - 票種可用性檢查 (`isAvailable()`)
   - 訂單狀態管理 (`markAsPaid()`, `cancel()`)
   - 票券簽到功能 (`markAsCheckedIn()`)
   - 座位狀態管理和防重複售出機制

3. **輔助功能**:
   - 自動產生訂單編號和票券代碼
   - 表單回應格式化 (`getFormattedValue()`)
   - 簽到資訊整合 (`getTicketInfo()`)

#### 5.4 下一步工作建議

資料庫設計和模型已完成，接下來建議專注於：

1. **種子資料**: 建立初始測試資料
2. **Livewire 元件**: 開發前端互動元件，特別是票券選擇和結帳流程
3. **控制器和路由**: 實現前後台的控制器邏輯
4. **授權策略**: 使用 Laravel Policies 定義不同角色的權限
5. **金流整合**: 實現藍新金流的完整支付流程
6. **事件監聽器**: 處理訂單狀態變更和通知

### 6. 種子資料實現紀錄

為了方便測試和開發，我們建立了一組測試用的種子資料，包含以下內容：

#### 6.1 用戶資料
- 系統管理員 (admin@example.com, 密碼: password)
- 工作人員 (staff@example.com, 密碼: password)
- 測試用戶 (user@example.com, 密碼: password)

#### 6.2 活動與票種
- 活動：「2025 台北春季音樂會」，包含完整的活動資訊
- 票種：
  - 全票 (500元，普通票)
  - 學生票 (300元，普通票)
  - 指定座位票 (800元，座位票)

#### 6.3 座位配置
- 建立「音樂廳標準配置」座位組
- 為指定座位票建立 A-E 排座位，每排 10 個座位

#### 6.4 表單設定
- 建立「基本聯絡資訊表單」，包含以下欄位：
  - 緊急聯絡人 (文字欄位)
  - 緊急聯絡人電話 (文字欄位)
  - 飲食偏好 (單選欄位，選項：葷食/素食)

#### 6.5 訂單資料
- 建立一筆測試用戶的已付款訂單
- 包含兩張全票
- 填寫完整的表單回應

這些種子資料提供了基本的測試環境，方便開發過程中進行功能測試和展示。透過命令 `php artisan migrate:fresh --seed` 可以快速重建所有表格並填充測試資料。

#### 6.6 資料工廠

我們還開發了一系列資料工廠 (Factories)，方便在開發過程中建立更多自訂的測試資料：

- UserFactory: 用於建立不同角色的用戶
- EventFactory: 用於建立各種狀態的活動
- TicketFactory: 用於建立各種類型的票種 (普通票、座位票、VIP票)
- SeatFactory: 用於建立座位和座位組
- CustomFormFactory 和 CustomFormFieldFactory: 用於建立客製化表單與欄位

這些工廠遵循真實場景設計，能產生符合實際應用的測試資料，有助於系統的開發和測試。

### 7. 目前專案進度與路由總結

#### 7.1 已完成功能

1. **資料庫架構**
   - 使用者 (User) 模型與認證系統
   - 活動 (Event) 模型與管理
   - 票種 (Ticket) 模型與管理
   - 座位 (Seat) 模型與管理
   - 訂單 (Order) 模型與管理
   - 表單 (CustomForm) 模型與管理

2. **活動分類功能**
   - 資料庫遷移新增 type 欄位
   - Event 模型中定義活動類型常數
   - 實作種子資料，建立多種不同類型的活動
   - 前端頁面支援依類型篩選與顯示活動

3. **前端功能頁面**
   - 首頁顯示精選與最新活動
   - 活動列表頁面 (含搜尋與篩選功能)
   - 活動詳情頁面 (含票種選擇)
   - 活動類型分類頁面

#### 7.2 主要路由結構

| 頁面 | 路由 | 說明 |
|------|------|------|
| 首頁 | `/` | 網站入口頁，顯示精選活動和分類導航 |
| 活動列表 | `/events` | 所有活動的列表頁，支援搜尋和篩選 |
| 活動類型頁 | `/events/type/{type}` | 依類型顯示活動，如音樂會、戲劇等 |
| 活動詳情 | `/events/{id}` | 顯示特定活動的詳細資訊及票種選項 |
| 結帳頁面 | `/checkout` | 購票結帳流程頁面 |
| 用戶儀表板 | `/user` | 用戶個人頁面 (需登入) |
| 用戶訂單 | `/user/orders` | 用戶訂單列表頁面 (需登入) |
| 用戶票券 | `/user/tickets` | 用戶票券列表頁面 (需登入) |
| 用戶設定 | `/settings/*` | 用戶設定相關頁面 (需登入) |

#### 7.3 控制器與模型結構

- **控制器**
  - `EventController`: 處理活動顯示、篩選和搜尋
    - `index()`: 活動列表
    - `show($id)`: 活動詳情
    - `byType($type)`: 依類型顯示活動

- **模型**
  - `Event`: 活動模型，包含類型定義和狀態管理
    - 重要常數: `TYPE_CONCERT`, `TYPE_DRAMA`, `TYPE_EXHIBITION` 等
    - 輔助方法: `getTypeNames()`, `getTypeNameAttribute()`
    - 活動狀態方法: `isPublished()`, `isEnded()`, `isActive()`

#### 7.4 重要上下文資訊

1. **活動類型**
   - `concert`: 音樂會
   - `drama`: 戲劇表演
   - `exhibition`: 藝術展覽
   - `dance`: 舞蹈演出
   - `workshop`: 工作坊
   - `lecture`: 講座
   - `festival`: 藝術節
   - `other`: 其他

2. **活動狀態**
   - `draft`: 草稿
   - `published`: 已發布
   - `unpublished`: 已下架

3. **環境設定**
   - Laravel 12
   - PHP 8+
   - MySQL 8+
   - 前端: Blade + Livewire + Alpine.js + Flux UI

4. **開發注意事項**
   - 所有模型使用 UUID 作為主鍵
   - 模型使用軟刪除功能防止資料遺失
   - 票種與座位採用關聯設計防止超賣
   - 活動發佈需設定發佈時間
   - 種子資料提供測試用的用戶、活動、票種

#### 7.5 後續開發規劃

1. **購票流程**
   - 實作 LiveWire 購票元件
   - 整合藍新金流
   - 實作購買確認與訂單生成

2. **票券管理**
   - 電子票券生成
   - QR Code 顯示
   - 入場掃碼功能

3. **後台管理**
   - 活動管理介面
   - 訂單管理
   - 報表與統計

4. **系統優化**
   - 快取機制
   - 搜尋優化
   - 交易機制防止超賣

### 8. 詳細路由與視圖結構

#### 8.1 完整網站路由列表

| 方法      | 網址                       | 路由名稱                | 控制器/動作                            | 說明                           |
|----------|----------------------------|------------------------|--------------------------------------|-------------------------------|
| GET/HEAD | /                          | home                   | 閉包函數                              | 網站首頁                       |
| GET/HEAD | /checkout                  | checkout               | 閉包函數                              | 結帳頁面                       |
| GET/HEAD | /events                    | events.index           | Client\EventController@index         | 活動列表頁                     |
| GET/HEAD | /events/type/{type}        | events.byType          | Client\EventController@byType        | 活動類型頁                     |
| GET/HEAD | /events/{id}               | events.show            | Client\EventController@show          | 活動詳情頁                     |
| GET/HEAD | /user                      | user.dashboard         | 閉包函數                              | 用戶儀表板                     |
| GET/HEAD | /user/orders               | user.orders.index      | 閉包函數                              | 用戶訂單列表                   |
| GET/HEAD | /user/orders/{id}          | user.orders.show       | 閉包函數                              | 用戶訂單詳情                   |
| GET/HEAD | /user/tickets              | user.tickets.index     | 閉包函數                              | 用戶票券列表                   |
| GET/HEAD | /user/tickets/{id}         | user.tickets.show      | 閉包函數                              | 用戶票券詳情                   |
| GET/HEAD | /settings/profile          | settings.profile       | App\Livewire\Settings\Profile        | 個人資料設定                   |
| GET/HEAD | /settings/password         | settings.password      | App\Livewire\Settings\Password       | 密碼設定                       |
| GET/HEAD | /settings/appearance       | settings.appearance    | App\Livewire\Settings\Appearance     | 外觀設定                       |
| GET/HEAD | /login                     | login                  | App\Livewire\Auth\Login              | 登入頁面                       |
| GET/HEAD | /register                  | register               | App\Livewire\Auth\Register           | 註冊頁面                       |
| GET/HEAD | /forgot-password           | password.request       | App\Livewire\Auth\ForgotPassword     | 忘記密碼頁面                   |
| GET/HEAD | /reset-password/{token}    | password.reset         | App\Livewire\Auth\ResetPassword      | 重設密碼頁面                   |
| GET/HEAD | /verify-email              | verification.notice    | App\Livewire\Auth\VerifyEmail        | 電子郵件驗證通知頁             |
| GET/HEAD | /verify-email/{id}/{hash}  | verification.verify    | Auth\VerifyEmailController           | 電子郵件驗證頁面               |
| POST     | /logout                    | logout                 | App\Livewire\Actions\Logout          | 登出操作                       |

#### 8.2 視圖檔案結構

```
resources/views/
├── client/                          # 客戶端視圖目錄
│   ├── events/                      # 活動相關視圖
│   │   ├── index.blade.php          # 活動列表頁面
│   │   ├── show.blade.php           # 活動詳情頁面
│   │   └── by_type.blade.php        # 活動類型分類頁面
│   ├── user/                        # 用戶中心相關視圖
│   │   ├── dashboard.blade.php      # 用戶儀表板頁面
│   │   ├── orders/                  # 訂單相關視圖
│   │   │   ├── index.blade.php      # 訂單列表頁面
│   │   │   └── show.blade.php       # 訂單詳情頁面
│   │   └── tickets/                 # 票券相關視圖
│   │       ├── index.blade.php      # 票券列表頁面
│   │       └── show.blade.php       # 票券詳情頁面
│   ├── home.blade.php               # 首頁視圖
│   └── checkout.blade.php           # 結帳頁面視圖
├── components/                      # 組件視圖
│   └── layouts/                     # 布局組件
│       └── client.blade.php         # 主要客戶端布局
└── ...                              # 其他視圖目錄
```

#### 8.3 主要頁面路徑和功能

1. **首頁** (`/`)
   - 顯示精選活動輪播
   - 顯示最新活動列表
   - 提供活動分類導航卡片
   - 電子報訂閱區域

2. **活動列表頁** (`/events`)
   - 左側篩選欄（活動類型、搜尋框）
   - 活動卡片網格顯示
   - 分頁導航
   - 顯示符合篩選條件的活動

3. **活動類型頁** (`/events/type/{type}`)
   - 頂部顯示活動類型名稱
   - 活動分類快速切換導航
   - 顯示該類型的所有活動列表
   - 分頁導航

4. **活動詳情頁** (`/events/{id}`)
   - 活動封面圖
   - 活動標題、類型標籤
   - 活動日期時間與地點
   - 活動詳細描述
   - 右側票券購買區域
   - 備註事項與退款政策

5. **結帳頁面** (`/checkout`)
   - 票券資訊確認
   - 購票人資料表單
   - 支付方式選擇
   - 訂單提交按鈕

6. **用戶儀表板** (`/user`)
   - 用戶資訊概覽
   - 訂單和票券統計數據
   - 最近訂單和即將參加的活動

7. **訂單列表頁** (`/user/orders`)
   - 所有歷史訂單列表
   - 訂單狀態過濾選項
   - 訂單搜尋功能

8. **訂單詳情頁** (`/user/orders/{id}`)
   - 訂單基本資訊
   - 購買的票券明細
   - 付款資訊
   - 操作按鈕（取消訂單、申請退款等）

9. **票券列表頁** (`/user/tickets`)
   - 已購買的有效票券列表
   - 票券狀態篩選

10. **票券詳情頁** (`/user/tickets/{id}`)
    - 票券資訊
    - 活動資訊
    - 入場 QR Code 顯示
    - 票券轉贈選項
